import React, { Component } from 'react';
import '../css/App.css';
import Autocomplete from 'react-autocomplete';
import * as Consts from './DisplayConstants'
import * as axios from 'axios';


export default class RowComponent extends Component {

  constructor(props) {
    super(props);
    this.onTextEntry = this.onTextEntry.bind(this, props);
    this.onTextSelect = this.onTextSelect.bind(this, props);
    this.onHrSelect = this.onHrSelect.bind(this, props);
    this.onMinSelect = this.onMinSelect.bind(this, props);
    this.state = {
      eiOrGILabelList: []
    }
  }


  onTextEntry(event, props, target) {
    console.log("BloodSugarAlteringEvent - onTextEntry - " + target);

    // axios.get('/simulator/' + action.payload.target)
    Promise.all([axios.get('http://localhost:8080/simulator/' + target)])
      .then((response) => {
        console.log('response ->');
        console.log(response[0].data);
        this.setState({
          eiOrGILabelList: response[0].data
        });
      })
      .catch((error) => {
        console.log('error ->');
        console.log(error);
      });
  }

  onTextSelect(event, props, target) {

    console.log("RowComponent - onTextSelect");
    let newEvent = {};
    Object.assign(newEvent, this.props.alteringEventList[event.idx]);
    newEvent.alteringEvent = target.indexName;
    newEvent.indexValue = target.indexValue;
    this.props.onEventSelect(event.idx, newEvent);
  }

  onHrSelect(event, props, target) {
    console.log("RowComponent - onHrSelect");
    let newEvent = {};
    Object.assign(newEvent, this.props.alteringEventList[event.idx]);
    newEvent.hour = target.indexValue;
    this.props.onEventSelect(event.idx, newEvent);
  }

  onMinSelect(event, props, target) {
    this.inputElement;
    console.log("RowComponent - onMinSelect");
    let newEvent = {};
    Object.assign(newEvent, this.props.alteringEventList[event.idx]);
    newEvent.minute = target.indexValue;
    this.props.onEventSelect(event.idx, newEvent);
  }

  AutoCompleteComponent(data, currValue, onchange, onselect) {
    return (
      <div>
        <Autocomplete getItemValue={(item) => item.indexName}
          items={data}
          value={currValue}
          renderItem={(item, isHighlighted) =>
            <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>
              {item.indexName}
            </div>
          }
          onChange={onchange}
          onSelect={onselect}
        />
      </div>
    );
  }

  render() {

    return (
      <div className="LeftAlign"><br />
        <div className="width60">{this.AutoCompleteComponent(
          this.state.eiOrGILabelList, this.props.item.alteringEvent,
          this.onTextEntry, this.onTextSelect)}</div>
        <div className="width10">{this.AutoCompleteComponent(
          Consts.hrsList, this.props.item.hour, {}, this.onHrSelect)}</div>
        <div className="width10">{this.AutoCompleteComponent(
          Consts.minsList, this.props.item.minute, {}, this.onMinSelect)}</div>
        <div className="width10"><label className="CancelBackGround circle">-</label></div>
      </div>
    );
  }
}